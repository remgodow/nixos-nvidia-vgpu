diff -Naur NVIDIA-Linux-x86_64-460.32.03-grid/kernel/nvidia/nv-vgpu-vmbus.c NVIDIA-Linux-x86_64-460.32.03-grid-new/kernel/nvidia/nv-vgpu-vmbus.c
--- NVIDIA-Linux-x86_64-460.32.03-grid/kernel/nvidia/nv-vgpu-vmbus.c    2020-12-27 20:10:42.000000000 +0100
+++ NVIDIA-Linux-x86_64-460.32.03-grid-new/kernel/nvidia/nv-vgpu-vmbus.c        2021-08-23 18:07:51.256198046 +0200
@@ -908,7 +908,7 @@
     open_msg.child_relid = nv_hyperv_ctx.guest_channel->offermsg.child_relid;
     open_msg.ringbuffer_gpadlhandle = nv_hyperv_ctx.guest_channel->ringbuffer_gpadlhandle;
     open_msg.downstream_ringbuffer_pageoffset = SEND_RINGBUFFER_SIZE >> PAGE_SHIFT;
-    open_msg.target_vp = nv_hyperv_ctx.guest_channel->target_vp;
+    open_msg.target_vp = nv_hyperv_ctx.guest_channel->target_cpu;

     status = nv_hyperv_post_msg(&open_msg, sizeof(struct vmbus_channel_open_channel));
     if (status != NV_OK)
@@ -1269,7 +1269,7 @@
     rdmsrl(HV_X64_MSR_HYPERCALL, hypercall_msr.as_uint64);
     page = pfn_to_page(hypercall_msr.guest_physical_address);
     num_pages = 1;
-    nv_hyperv_ctx.nv_hypercall_pg = vmap(&page, num_pages, VM_MAP, PAGE_KERNEL_RX);
+    nv_hyperv_ctx.nv_hypercall_pg = vmap(&page, num_pages, VM_MAP, PAGE_KERNEL_ROX);
     if (!nv_hyperv_ctx.nv_hypercall_pg)
     {
         nv_printf(NV_DBG_ERRORS, "NVRM: Error while accessing hypercall page\n");
